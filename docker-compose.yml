services:
  db:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - dokploy-network
    restart: unless-stopped
    
  php:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./app:/var/www/html
    depends_on:
      - db
    networks:
      - dokploy-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - 80
      - 443
    volumes:
      - ./app:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
    networks:
      - dokploy-network
    restart: unless-stopped
    labels:
      - traefik.http.routers.${DOMAIN_NAME_SS_1}-web.rule=Host(`${DOMAIN_NAME_SS}`)
      - traefik.http.routers.${DOMAIN_NAME_SS_1}-web.entrypoints=web
      - traefik.http.services.${DOMAIN_NAME_SS_1}-web.loadbalancer.server.port=80
      - traefik.http.routers.${DOMAIN_NAME_SS_1}-web.service=${DOMAIN_NAME_SS_1}-web
      - traefik.http.routers.${DOMAIN_NAME_SS_1}-web.middlewares=redirect-to-https@file
      - traefik.http.routers.${DOMAIN_NAME_SS_1}-websecure.rule=Host(`${DOMAIN_NAME_SS}`)
      - traefik.http.routers.${DOMAIN_NAME_SS_1}-websecure.entrypoints=websecure
      - traefik.http.services.${DOMAIN_NAME_SS_1}-websecure.loadbalancer.server.port=80
      - traefik.http.routers.${DOMAIN_NAME_SS_1}-websecure.service=${DOMAIN_NAME_SS_1}-websecure
      - traefik.http.routers.${DOMAIN_NAME_SS_1}-websecure.tls.certresolver=letsencrypt
      - traefik.docker.network=dokploy-network
      - traefik.enable=true

networks:
  dokploy-network:
    external: true
    driver: overlay

volumes:
  db-data:
